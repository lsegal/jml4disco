[[VCVarDecl: x :: int], [VCVarDecl: y :: int], [VCVarDecl: return :: int]] [[/\[[True/\( (y@142$0 >= 0) ? (x@135$0 >= 0) : False)], (z@153$0 == x@135$0), (w@166$0 == y@142$0)]]-->(((y@142$0 * w@166$0) + z@153$0) == (x@135$0 + (y@142$0 * y@142$0)))]
[[VCVarDecl: x :: int], [VCVarDecl: y :: int], [VCVarDecl: return :: int]] [[/\[[True/\( (y@142$0 >= 0) ? (x@135$0 >= 0) : False)], (z@153$0 == x@135$0), (w@166$0 == y@142$0), (z@153$1 == z@153$1), (w@166$1 == w@166$1), [(z@153$1 == ((x@135$0 + (y@142$0 * y@142$0)) - (w@166$1 * y@142$0)))/\(w@166$1 >= 0)], (jmlWhile$1$var$0@269$0 == w@166$1), (w@166$1 > 0), (z@153$2 == (z@153$1 + y@142$0)), (w@166$2 == (w@166$1 - 1))]]-->(w@166$2 < jmlWhile$1$var$0@269$0)]
[[VCVarDecl: x :: int], [VCVarDecl: y :: int], [VCVarDecl: return :: int]] [[/\[[True/\( (y@142$0 >= 0) ? (x@135$0 >= 0) : False)], (z@153$0 == x@135$0), (w@166$0 == y@142$0), (z@153$1 == z@153$1), (w@166$1 == w@166$1), [(z@153$1 == ((x@135$0 + (y@142$0 * y@142$0)) - (w@166$1 * y@142$0)))/\(w@166$1 >= 0)], (jmlWhile$1$var$0@269$0 == w@166$1), (w@166$1 > 0), (z@153$2 == (z@153$1 + y@142$0)), (w@166$2 == (w@166$1 - 1))]]-->(w@166$2 >= 0)]
[[VCVarDecl: x :: int], [VCVarDecl: y :: int], [VCVarDecl: return :: int]] [[/\[[True/\( (y@142$0 >= 0) ? (x@135$0 >= 0) : False)], (z@153$0 == x@135$0), (w@166$0 == y@142$0)]]-->(w@166$0 >= 0)]
[[VCVarDecl: x :: int], [VCVarDecl: y :: int], [VCVarDecl: return :: int]] [[/\[[True/\( (y@142$0 >= 0) ? (x@135$0 >= 0) : False)], (z@153$0 == x@135$0), (w@166$0 == y@142$0)]]-->(z@153$0 == ((x@135$0 + (y@142$0 * y@142$0)) - (w@166$0 * y@142$0)))]
